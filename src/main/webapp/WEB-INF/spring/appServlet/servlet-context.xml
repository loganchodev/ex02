<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- Spring MVC와 관련된 설정 파일임을 선언하는 부분 -->

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- DispatcherServlet의 요청 처리 인프라를 정의하는 부분 -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Spring MVC에서 @Controller 어노테이션을 사용할 수 있게 해주는 설정 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- /resources/** 경로로 오는 HTTP GET 요청을 처리하여, ${webappRoot}/resources 디렉토리 안의 정적 자원들을 효율적으로 제공 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- @Controllers에 의해 선택된 뷰를 렌더링하기 위해 /WEB-INF/views 디렉토리 내의 .jsp 리소스로 해석 -->

	<context:component-scan base-package="com.study.erum" />
	<!-- com.study.erum 패키지와 그 하위 패키지에서 어노테이션 기반의 컴포넌트(@Component, @Service, @Repository 등)를 스캔하고, 자동으로 빈으로 등록 -->
	
</beans:beans>
